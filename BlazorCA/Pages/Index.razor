@page "/"
@inject HttpClient Http

<h1 class="text-center text-primary">A Blazor website using the Studio Ghibli Api</h1>

@if (characters == null || films == null)
{
    <p><em>Loading...</em></p>
}
else
{
<div class="container">
    <div class="row">
        <div class="col-4">
            <table class="table">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Gender</th>
                        <th>Age</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var character in randChars)
                    {
                        <tr>
                            <td><a href="bio/{@character.Id}">@character.Name</a></td>
                            <td>@character.Gender</td>
                            <td>@character.Age</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="col-4">
            <table class="table">
                <thead>
                    <tr>
                        <th>Title</th>
                        <th>Release Date</th>
                        <th>Review Score</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var film in randFilms)
                    {
                        <tr>
                            <td>@film.Title</td>
                            <td>@film.Release_date</td>
                            <td>@film.Rt_score</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
}

@code{
    private List<CharacterList> characters = new List<CharacterList>();
    private List<FilmList> films = new List<FilmList>();
    private List<CharacterList> randChars = new List<CharacterList>();
    private List<FilmList> randFilms = new List<FilmList>();
    Random r = new Random();

    void RandLists()
    {
        randChars.Clear();
        randFilms.Clear();
        int rInt;
        while (randChars.Count < 5 && randFilms.Count < 5)
        {
            rInt = r.Next(0, (characters.Count - 1));
            randChars.Add(characters.ElementAt(rInt));
            rInt = r.Next(0, (films.Count - 1));
            randFilms.Add(films.ElementAt(rInt));
        }
    }

    protected override async Task OnInitializedAsync()
    {
        characters = await Http.GetFromJsonAsync<List<CharacterList>>("/people");
        films = await Http.GetFromJsonAsync<List<FilmList>>("/films");
        RandLists();
    }


    public class FilmList
    {
        public string Id { get; set; }

        public string Title { get; set; }

        public string Description { get; set; }

        public string Director { get; set; }

        public string Producer { get; set; }

        public string Release_date { get; set; }

        public string Rt_score { get; set; }

    }
    public class CharacterList
    {
        public string Id { get; set; }

        public string Name { get; set; }

        public string Gender { get; set; }

        public string Age { get; set; }

        public string Eye_color { get; set; }

        public string Hair_color { get; set; }

        public string[] Films { get; set; }

        public string Species { get; set; }

        public string Url { get; set; }

    }
}